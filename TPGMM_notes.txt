- Try to make each sample its own size instead of making them all of same size [Can't! because the algorithm creates a tensor to represent the data before learning the GMM]
- Do DTW to make all samples the same size
- Make the TPGMM train over pose_error  (add 4th dimension to _Data.txt of the samples)
- Find where the training-over-datatype (either time or pose_error) is defined in the code

AFter getting the Mu and Sigma in 3D:
- Either -> convert them to a format so that the gmm_gmr ros node can read it and visualize it in Rviz [DONE]
      OR -> plot the GMM (elipses) in python TPGMM package, but will have to double check the regression!

After visualizing the TPGMM in Rviz:

--TPGMM node:
  - Need to take desired starting and goal poses and feed them as input to TPGMM node (ros service)
    - rosservice input: (task_name, start(frame1) & goal(frame2) poses (A&b matrices))
  - Read all Demons and convert them in the txt format (i.e. A & b and Data matrices), 
    and create newParameter matrix from the input (starting and goal poses)
    - Now that demons_to_samples.ipynb is run in tp-gmm.py, I only need to pass 'task_name' and 'task_num' to 
      demons_to_samples.ipynb externally. This can be done by either writing to a .txt file or .py. [Done with .pkl file]
  - Fit the GMM
  - Reproduce with newParameter matix to obtain the GMM which will be passed to gaussian_mixture_model nodes
  UP TO THIS POINT, all previous steps are now completed and the TPGMM can now be visualized in Rviz. 
  Notes regarding that: the TPGMM works better (expands and adapts better) with 'Rbolts' than 'Rcover. This is 
  because the 'Rbolts' data are more sparse, and therefore the model knows wider space.
  TODO: - continous visualization of the TPGMM with varying starting and goal poses in Rviz.
   
-- gaussian_mixture_model nodes:
  - visualize the TPGMM in Rviz
  - doRegression 



ITRA Project ----------------------

- So far, nbStates (nb of Gaussians) = 2, diagRegularizationFactor = 0.000001 is good
  Also  , nbStates (nb of Gaussians) = 5, diagRegularizationFactor = 0.01 is good